3x3 grid of nodes
(0,0) in top left, (2,0) in top right, (2,2) in bottom right

0 1 2
3 4 5
6 7 8

Algorith for Random Pattern:

Get random number between minPathLength and maxPathLength, this is pathLength
Start with allAvailablePointList is list of all nodes.
Get a random number [0,8]. This is the starting node.
Remove starting node from allAvailablePointList
Initialize candidatePointList to allAvailablePointList

while pattern length != pathLength 
    For each candidate point:
	    Get dX and dY of start point and candidate point
	    Get gcd of dX and dY
	    if (gcd > 1)
		    for (j where 1 <= j < gcd)
			    unusedX = startX + dX/gcd*j;
			    ^^Same for y
			    if node at (unusedX, unusedY) is in the candidatePointList, remove current point from candidate list
    Get random number [0, candidatePointList length) -> that node is the next node in the pattern
    Add next node to pattern, remove from allAvailablePointList
    Reset candidatePointList to allAvailablePointList
